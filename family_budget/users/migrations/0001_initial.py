# Generated by Django 3.2.15 on 2022-09-04 11:22

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of the instance this object belongs to. \n            Mandatory, unless a new instance to create is given.', primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='First name of the user.', max_length=125, null=True, verbose_name='First names')),
                ('last_name', models.CharField(blank=True, help_text='Last name of the user.', max_length=125, null=True, verbose_name='Last names')),
                ('name', models.CharField(blank=True, help_text="Full name of the user. If user account type is `business`, \n            then this represents company's name.", max_length=125, null=True, verbose_name='Full names')),
                ('username', models.CharField(blank=True, db_index=True, help_text='Customers username. This cannot be used to login. \n            A username maybe used to generate a Paylink Profile.', max_length=50, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(db_index=True, help_text='The primary email address of the user', max_length=254, unique=True, verbose_name='Email')),
                ('email_verified', models.BooleanField(default=False, editable=False, help_text='Flag to determine if user has verified their email address', verbose_name='Email verified')),
                ('date_joined', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='The date client joined the website.', verbose_name='Joined Date')),
                ('last_failed_login', models.DateTimeField(blank=True, editable=False, help_text='The date recorded when last the user failed to \n            login into account. Each attempt of failed login \n            is recorded for security and audit purposes.', null=True, verbose_name='Last Failed Login')),
                ('last_password_change', models.DateTimeField(blank=True, editable=False, help_text='The date recorded when last the user \n            changed password. Each password change is \n            recorded for security and audit purposes.', null=True, verbose_name='Last Password Change')),
                ('password_change_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Password Change')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was modified. \n            The date and time are displayed in the Timezone \n            from where request is made. \n            e.g. 2019-14-29T00:15:09Z for April 29, 2019 0:15:09 UTC', null=True, verbose_name='Updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-date_joined',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_name', 'first_name'], name='users_user_last_na_be362d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['first_name'], name='first_name_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('first_name', 'last_name', 'email'), name='unique_user'),
        ),
    ]
